--CREATE SCHEMA dannys_diner;
--SET search_path = dannys_diner;

CREATE TABLE sales (
  "customer_id" VARCHAR(1),
  "order_date" DATE,
  "product_id" INTEGER
);

INSERT INTO sales
  ("customer_id", "order_date", "product_id")
VALUES
  ('A', '2021-01-01', '1'),
  ('A', '2021-01-01', '2'),
  ('A', '2021-01-07', '2'),
  ('A', '2021-01-10', '3'),
  ('A', '2021-01-11', '3'),
  ('A', '2021-01-11', '3'),
  ('B', '2021-01-01', '2'),
  ('B', '2021-01-02', '2'),
  ('B', '2021-01-04', '1'),
  ('B', '2021-01-11', '1'),
  ('B', '2021-01-16', '3'),
  ('B', '2021-02-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-07', '3');
 

CREATE TABLE menu (
  "product_id" INTEGER,
  "product_name" VARCHAR(5),
  "price" INTEGER
);

INSERT INTO menu
  ("product_id", "product_name", "price")
VALUES
  ('1', 'sushi', '10'),
  ('2', 'curry', '15'),
  ('3', 'ramen', '12');
  

CREATE TABLE members (
  "customer_id" VARCHAR(1),
  "join_date" DATE
);

INSERT INTO members
  ("customer_id", "join_date")
VALUES
  ('A', '2021-01-07'),
  ('B', '2021-01-09');



--1. What is the total amount each customer spent at the restaurant?

SELECT  sales.customer_id, SUM(menu.price) As [Total Amount Spent]

FROM menu

INNER JOIN sales

ON menu.product_id = sales.product_id

GROUP BY  sales.customer_id


--2. How many days has each customer visited the restaurant?

SELECT customer_id, COUNT(DISTINCT order_date) As [Number Of Days]

FROM sales

GROUP BY customer_id


--3. What was the first item from the menu purchased by each customer?

;WITH CTE AS

(

SELECT  sales.customer_id, menu.product_name, sales.order_date, ROW_NUMBER() OVER (PARTITION BY sales.customer_id ORDER BY sales.order_date) AS [ROW]

FROM menu

INNER JOIN sales

ON menu.product_id = sales.product_id

)

SELECT *

FROM CTE

WHERE [ROW] = 1

--4. What is the most purchased item on the menu and how many times was it purchased by all customers?

WITH cte as (

SELECT  menu.product_name, COUNT(menu.product_name) AS [Total], ROW_NUMBER() OVER (ORDER BY menu.product_name) [ROW]

FROM menu

INNER JOIN sales

ON menu.product_id = sales.product_id

GROUP BY menu.product_name 
)

SELECT product_name, Total

FROM cte

WHERE [ROW] = 2

--5 .Which item was the most popular for each customer?

with cte as 

(

SELECT  customer_id, menu.product_name, COUNT(menu.product_name) AS [Total], ROW_NUMBER() OVER (partition by customer_id ORDER BY COUNT(menu.product_name)  DESC) [ROW]

FROM menu

INNER JOIN sales

ON menu.product_id = sales.product_id

GROUP BY menu.product_name, customer_id

)

select customer_id, product_name, Total from cte where [ROW] = 1

--6. Which item was purchased first by the customer after they became a member?

with cte as 

(

SELECT  customer_id, menu.product_name, order_date , ROW_NUMBER() OVER (partition by customer_id ORDER BY order_date  ASC) [ROW]

FROM menu

INNER JOIN sales

ON menu.product_id = sales.product_id

GROUP BY menu.product_name, customer_id, order_date

)

select customer_id, product_name, order_date from cte where [ROW] = 1



--7. Which item was purchased just before the customer became a member?

select sales.customer_id, product_name, order_date, join_date

from menu

inner join sales

on sales.product_id = menu.product_id

inner join members

on members.customer_id = sales.customer_id

where order_date < join_date

--8. What is the total items and amount spent for each member before they became a member

select sales.customer_id, count(product_name) [TotalItems], sum(price) [AmountSpent]

from menu

inner join sales

on sales.product_id = menu.product_id

inner join members

on members.customer_id = sales.customer_id

where order_date < join_date

group by sales.customer_id


--9. If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

select customer_id, product_name, price,

case 

	when product_name = 'sushi' then  2* 10 * price

	else 10 * price 

	end [Points]

from menu

inner join sales

on menu.product_id = sales.product_id

where price > 1

--10.In the first week after a customer joins the program (including their join date) they earn 2x points on all items,
--not just sushi - how many points do customer A and B have at the end of January?


with cte as

(

select sales.customer_id, product_name, price, order_date,
 
case when datepart(week, order_date) = datepart(week, join_date) then  2 * 10 * price

when product_name = 'sushi' then  2* 10 * price

else 10 * price 

end [Points]

from menu

inner join sales

on sales.product_id = menu.product_id

inner join members

on members.customer_id = sales.customer_id

where datepart(month, order_date) = 1

)

select customer_id, sum(Points) [TotalPoints]

from cte

group by customer_id
